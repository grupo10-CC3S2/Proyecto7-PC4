name: CI
on: [push, pull_request]
jobs:
  job1:
    runs-on: ubuntu-latest
    name: build example and deploy to minikube
    steps:
    - uses: actions/checkout@v4

    - name: Install requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install -r requirements.txt

    - name: Start minikube
      uses: medyagh/setup-minikube@latest

    - name: Build docker images
      run: |
        minikube image build -t timeserver:v3 app
    
    - name: Try the cluster!
      run: kubectl get pods -A

    - name: Build image
      run: |
        minikube image build -t local/devex:v1 .
    - name: Deploy to minikube
      run: kubectl apply -f k8s/

    - name: Sleep 10 seconds
      run: sleep 10

    - name: Check pods
      run: kubectl get pods -A

    - name: Install metrics-server (with fix for Minikube)
      run: |
        kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
        kubectl patch deployment metrics-server -n kube-system \
          --type='json' \
          -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value":"--kubelet-insecure-tls"}]'

    - name: Wait for metrics-server to be ready (max 60s)
      run: |
        for i in {1..12}; do
          echo "Esperando metrics-server ($i/12)..."
          ready=$(kubectl get pods -n kube-system | grep metrics-server | grep Running | grep '1/1' | wc -l)
          if [ "$ready" -eq 1 ]; then
            echo "✅ metrics-server está listo"
            break
          fi
          sleep 5
        done

    - name: Sleep 15 seconds
      run: sleep 15

    - name: Check metrics-server
      run: kubectl top pods 

    - name: Port forward service to localhost:8000
      run: |
        kubectl port-forward service/timeserver 8000:80 &
        sleep 5
    
    - name: Corriendo los tests
      run: pytest